{"version":3,"file":"theme-multi-switch.js","sources":["../src/main.ts"],"sourcesContent":["export default class ThemeSwitch extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\tprivate getA(attr: string, fallback: string = \"\"): string {\n\t\treturn this.getAttribute(attr) || fallback;\n\t}\n\n\tprivate getArray(attr: string, fallback: string[] = []): string[] {\n\t\tconst temp = this.getA(attr, \"\");\n\t\tif (!temp) return fallback;\n\n\t\tlet tempArray: string[] = [];\n\t\ttry {\n\t\t\t// check to see if this is a JSON string\n\t\t\ttempArray = JSON.parse(temp);\n\t\t} catch (err) {\n\t\t\t// check to see if this a comma separated string\n\t\t\ttempArray = temp.split(\",\");\n\t\t}\n\t\tif (Array.isArray(tempArray)) {\n\t\t\treturn tempArray;\n\t\t} else return fallback;\n\t}\n\n\tget layout(): string {\n\t\treturn this.getA(\"layout\", \"around top\");\n\t}\n\tget themes(): string[] {\n\t\treturn this.getArray(\"themes\", [\"light\", \"auto\", \"dark\"]);\n\t}\n\tget meta(): string[] {\n\t\treturn this.getArray(\"meta-colors\", []);\n\t}\n\tget theme() {\n\t\treturn this.getA(\"theme\") || this.themes[1];\n\t}\n\tset theme(theme) {\n\t\tthis.setAttribute(\"theme\", theme);\n\t}\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"themes\", \"theme\", \"meta-colors\", \"knob-width\", \"layout\"];\n\t}\n\n\tpublic connectedCallback(): void {\n\t\tconst savedTheme = window.localStorage.getItem(\"theme\");\n\t\tif (savedTheme) {\n\t\t\tconst active = this.themes.indexOf(savedTheme);\n\t\t\tif (active >= 0) {\n\t\t\t\tthis.theme = savedTheme;\n\t\t\t}\n\t\t}\n\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate addEventListeners(): void {\n\t\tthis.shadow.addEventListener(\n\t\t\t\"click\",\n\t\t\t(event) => {\n\t\t\t\tconst el = event.target as HTMLInputElement;\n\t\t\t\tif (el?.checked && el.value !== this.theme) {\n\t\t\t\t\tthis.theme = el.value;\n\t\t\t\t}\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\t// Event Listener for \"theme-switch\" custom event\n\t\tdocument.addEventListener(\"theme-switch\", (event) => {\n\t\t\tconst theme = (<CustomEvent>event).detail;\n\t\t\t// only trigger if theme exists and is not active\n\t\t\tif (theme && theme !== this.theme && this.themes.includes(theme)) {\n\t\t\t\tconsole.log(\"theme-switch event received\", theme);\n\t\t\t\tthis.theme = theme;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setTheme($this: ThemeSwitch, theme: string): void {\n\t\tconst active = $this.themes.indexOf(theme);\n\n\t\t// Only run if theme exists\n\t\tif (active > -1) {\n\t\t\tconst html = document.querySelector(\"html\");\n\t\t\tconst metaThemeColor = document.querySelector(\"meta[name='theme-color']\");\n\t\t\tlet metaColor = $this.meta[active];\n\n\t\t\t// Set data-theme on html element\n\t\t\tif (html) {\n\t\t\t\thtml.setAttribute(\"data-theme\", theme);\n\t\t\t}\n\n\t\t\t// Set meta theme-color if available\n\t\t\tif (metaThemeColor && metaColor) {\n\t\t\t\tif (metaColor === \"auto\") {\n\t\t\t\t\tconst light = $this.themes.indexOf(\"light\");\n\t\t\t\t\tconst dark = $this.themes.indexOf(\"dark\");\n\t\t\t\t\tif (window.matchMedia(\"(prefers-color-scheme: dark)\").matches && dark > -1) {\n\t\t\t\t\t\tmetaColor = $this.meta[dark];\n\t\t\t\t\t} else if (window.matchMedia(\"(prefers-color-scheme: light)\").matches && light > -1) {\n\t\t\t\t\t\tmetaColor = $this.meta[light];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmetaThemeColor.setAttribute(\"content\", metaColor);\n\t\t\t}\n\n\t\t\t// Store theme\n\t\t\twindow.localStorage.setItem(\"theme\", theme);\n\n\t\t\t// dispatch event\n\t\t\tthis.dispatchEvent(\n\t\t\t\tnew CustomEvent(\"theme-switch\", {\n\t\t\t\t\tdetail: theme,\n\t\t\t\t\tbubbles: true,\n\t\t\t\t\tcancelable: true,\n\t\t\t\t\tcomposed: true,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\tpublic attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t\t// console.log(\"changed\", name, oldValue, newValue);\n\n\t\t// only run if value for theme has changed\n\t\tif (name === \"theme\" && newValue !== oldValue) {\n\t\t\tthis.setTheme(this, newValue);\n\t\t}\n\t}\n\n\tprivate render() {\n\t\tconst themes = this.themes;\n\n\t\tconst cssLabelHighlight = themes.map((theme) => `:host([theme=\"${theme}\"]) [part=\"${theme}\"]`).join(\",\") + `{color: var(--theme-switch-highlight, inherit)}`;\n\n\t\tconst cssKnobs = themes\n\t\t\t.map((theme, i) => `:host([theme=\"${theme}\"]) .knob { left: ${(i / (themes.length - 1)) * 100}%; transform: translateX(-${(i / (themes.length - 1)) * 100}%); }`)\n\t\t\t.join(\"\");\n\n\t\tlet cssMidPadding = \"1em 0 0\";\n\n\t\tlet cssMidLabelPosition = \"top: 0px;\";\n\n\t\tif (this.layout.includes(\"bottom\")) {\n\t\t\tcssMidPadding = \"0 0 1em\";\n\t\t\tcssMidLabelPosition = \"bottom: 0px;\";\n\t\t}\n\t\tif (themes.length < 3 && this.layout.includes(\"around\")) {\n\t\t\tcssMidPadding = \"0\";\n\t\t}\n\t\tconst css = `\n        <style>\n            .wrap {\n                position: relative;\n                display: inline-flex;\n                gap: 0.3em;\n                align-items: end;\n            }\n            .side {\n                height: 1.2em;\n                padding: ${cssMidPadding};\n            }\n            .mid {\n                position: relative;\n                padding: ${cssMidPadding};\n            }\n            label {\n                cursor: pointer;\n                line-height: 1;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                font-weight: 700;\n                font-size: 0.8em;\n            }\n            input {\n                position: absolute;\n                top: 0px;\n                bottom: 0px;\n                left: 0px;\n                right: 0px;\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                opacity: 0;\n            }\n            .mid .labels {\n                display: flex;\n                position: absolute;\n                width: 100%;\n                ${cssMidLabelPosition}\n                text-align: center;\n            }\n            .mid label {\n                width: 100%;\n                display: flex;\n                justify-content: center;\n            }\n            .track {\n                background: var(--theme-switch-track, #88888822);\n                height: 1em;\n                border: 0.1em solid var(--theme-switch-track-border, currentColor);\n                border-radius: 0.2em;\n                padding: 0 0.1em;\n                position: relative;\n                grid-area: switch;\n                display: flex;\n            }\n            .track span {\n                width: calc(var(--theme-switch-knob-width, 1) * .9em);\n                flex-shrink: 0;\n                bottom: 0px;\n                position: relative;\n            }\n            .knob {\n                left: 50%;\n                transform: translateX(-50%);\n                position: absolute;\n                top: 0em;\n                background: var(--theme-switch-knob, currentColor);\n                transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n                width: calc(var(--theme-switch-knob-width, 1) * 1em);\n                height: 1em;\n                border-radius: 0.1em;\n            }\n            ${cssKnobs}\n            ${cssLabelHighlight}\n        </style>\n        `;\n\n\t\tlet labels = themes.map((theme) => `<label title=\"${theme}\" for=\"${theme}\" part=\"${theme}\"><slot name=\"${theme}\">${theme}</slot></label>`);\n\n\t\tconst radios = themes.map(\n\t\t\t(theme) => `<span><input value=${theme} type=\"radio\" name=\"theme\" id=\"${theme}\" ?checked=${this.theme === theme} aria-label=\"${theme} theme\" /></span>`\n\t\t);\n\n\t\tlet side = [\"\", \"\"];\n\n\t\tif (this.layout.includes(\"around\")) {\n\t\t\tside[0] = `<div class=\"side\">${labels[0]}</div>`;\n\t\t\tside[1] = `<div class=\"side\">${labels[this.themes.length - 1]}</div>`;\n\t\t\t// remove first and last labels\n\t\t\tlabels.pop();\n\t\t\tlabels.shift();\n\t\t}\n\n\t\tlet html = `\n        <div class=\"wrap\">\n            ${side[0]}\n            <div class=\"mid\"><div class=\"labels\">${labels.join(\"\")}</div>\n                <div class=\"track\" part=\"track\">\n                    ${radios.join(\"\")}\n                    <div class=\"knob\" part=\"knob\"></div>\n                </div>\n            </div>\n            ${side[1]}\n        </div>\n        `;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n}\ncustomElements.define(\"theme-switch\", ThemeSwitch);\n"],"names":["ThemeSwitch","__publicField","attr","fallback","temp","tempArray","theme","savedTheme","event","el","$this","active","html","metaThemeColor","metaColor","light","dark","name","oldValue","newValue","themes","cssLabelHighlight","cssKnobs","i","cssMidPadding","cssMidLabelPosition","css","labels","radios","side"],"mappings":"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"}