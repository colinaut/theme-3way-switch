{"version":3,"file":"theme-3way-switch.js","sources":["../src/main.ts"],"sourcesContent":["export default class ThemeSwitch extends HTMLElement {\n\tprivate shadow: ShadowRoot;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.shadow = this.attachShadow({ mode: \"open\" });\n\t}\n\n\tprivate getA(attr: string, fallback: string = \"\"): string {\n\t\treturn this.getAttribute(attr) || fallback;\n\t}\n\n\tprivate getArray(attr: string, fallback: string[] = []): string[] {\n\t\tconst temp = this.getA(attr, \"\");\n\t\tif (!temp) return fallback;\n\n\t\tlet tempArray: string[] = [];\n\t\ttry {\n\t\t\t// check to see if this is a JSON string\n\t\t\ttempArray = JSON.parse(temp);\n\t\t} catch (err) {\n\t\t\t// check to see if this a comma separated string\n\t\t\ttempArray = temp.split(\",\");\n\t\t}\n\t\tif (Array.isArray(tempArray)) {\n\t\t\treturn tempArray;\n\t\t} else return fallback;\n\t}\n\n\tget knobWidth(): number {\n\t\treturn Number(this.getA(\"knob-width\", \"1\"));\n\t}\n\tget themes(): string[] {\n\t\treturn this.getArray(\"themes\", [\"light\", \"auto\", \"dark\"]);\n\t}\n\tget metaColors(): string[] {\n\t\treturn this.getArray(\"meta-colors\", []);\n\t}\n\tget theme() {\n\t\treturn this.getA(\"theme\") || this.themes[1];\n\t}\n\tset theme(theme) {\n\t\tthis.setAttribute(\"theme\", theme);\n\t}\n\n\tstatic get observedAttributes(): string[] {\n\t\treturn [\"themes\", \"theme\", \"meta-colors\", \"knob-width\"];\n\t}\n\n\tprivate active = this.themes.length === 3 ? 1 : 0;\n\n\tpublic connectedCallback(): void {\n\t\tconst savedTheme = window.localStorage.getItem(\"theme\");\n\t\tif (savedTheme) {\n\t\t\tconst active = this.themes.indexOf(savedTheme);\n\t\t\tif (active >= 0) {\n\t\t\t\tthis.setTheme(this, active);\n\t\t\t}\n\t\t} else {\n\t\t\tconst themeAttr = this.themes.indexOf(this.theme);\n\t\t\tif (themeAttr >= 0) {\n\t\t\t\tthis.setTheme(this, themeAttr);\n\t\t\t}\n\t\t}\n\n\t\tthis.render();\n\t\tthis.addEventListeners();\n\t}\n\n\tprivate addEventListeners(): void {\n\t\tthis.shadow.addEventListener(\n\t\t\t\"click\",\n\t\t\t(event) => {\n\t\t\t\tthis.eventListeners(this, event);\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\t// Event Listener for \"theme-switch\" custom event\n\t\tdocument.addEventListener(\"theme-switch\", (event) => {\n\t\t\tconst theme = (<CustomEvent>event).detail;\n\t\t\t// only trigger if theme exists and is not active\n\t\t\tif (theme && theme !== this.theme && this.themes.includes(theme)) {\n\t\t\t\tconsole.log(\"theme-switch event received\", theme);\n\t\t\t\tthis.setTheme(this, this.themes.indexOf(theme));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate eventListeners($this: ThemeSwitch, e: Event): void {\n\t\tconst el = e.target as HTMLInputElement;\n\t\tconst active = Number(el.value);\n\n\t\t// only trigger if is not active\n\t\tif (el?.checked && active !== this.active) {\n\t\t\t$this.setTheme($this, active);\n\t\t}\n\t}\n\n\tprivate setTheme($this: ThemeSwitch, active: number): void {\n\t\tconst html = document.querySelector(\"html\");\n\t\tconst metaThemeColor = document.querySelector(\"meta[name='theme-color']\");\n\t\tconst theme = $this.themes[active];\n\t\tconst metaColor = $this.metaColors[active];\n\t\tconsole.log(\"ðŸš€ ~ file: main.ts ~ line 111 ~ ThemeSwitch ~ setTheme ~ theme\", active, theme);\n\t\t// Set data-theme on html element\n\t\tif (html) {\n\t\t\thtml.setAttribute(\"data-theme\", theme);\n\t\t}\n\n\t\t// Set meta theme-color if available\n\t\tif (metaThemeColor && metaColor) {\n\t\t\tmetaThemeColor.setAttribute(\"content\", metaColor);\n\t\t}\n\n\t\t// Store theme\n\t\twindow.localStorage.setItem(\"theme\", theme);\n\n\t\t// set private active\n\t\t$this.active = active;\n\n\t\t// set theme, which triggers attributeChangedCallback\n\t\t$this.theme = theme;\n\n\t\t// dispatch event\n\t\tthis.dispatchEvent(\n\t\t\tnew CustomEvent(\"theme-switch\", {\n\t\t\t\tdetail: theme,\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true,\n\t\t\t\tcomposed: true,\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n\t\tconsole.log(\"changed\", name, oldValue, newValue);\n\t\tif (name === \"theme\" && newValue !== oldValue) {\n\t\t\tconst active = this.themes.indexOf(newValue);\n\n\t\t\tif (active >= 0) {\n\t\t\t\tthis.active = active;\n\n\t\t\t\tthis.render();\n\t\t\t\t// TODO: trigger dispatch event????? Somehow without forcing it to be this when it is set initially.\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate render() {\n\t\tconst themes = this.themes;\n\t\tconst labels = themes.map((theme, i) => `<label title=\"${themes[i]}\" for=\"label${i}\" part=\"label${i}\"><slot name=\"label${i}\">${theme}</slot></label>`);\n\n\t\tconst midLabels = labels.filter((_label, i) => i > 0 && i < labels.length - 1);\n\n\t\tconst radios = themes.map(\n\t\t\t(theme, i) => `<span><input value=${i} type=\"radio\" name=\"theme\" id=\"label${i}\" ?checked=${this.active === i} aria-label=\"${theme} theme\" /></span>`\n\t\t);\n\n\t\tconst cssLabelHighlight = themes.map((_theme, i) => `[data-active=\"${i}\"] [part=\"label${i}\"]`).join(\",\") + `{color: var(--theme-switch-highlight, inherit)}`;\n\n\t\tconst cssKnobs = themes\n\t\t\t.map((_theme, i) => `[data-active=\"${i}\"] .knob { left: ${(i / (themes.length - 1)) * 100}%; transform: translateX(-${(i / (themes.length - 1)) * 100}%); }`)\n\t\t\t.join(\"\");\n\n\t\tconst cssTrackSpanWidth = this.knobWidth - 0.2;\n\n\t\tconst css = `\n        <style>\n            .wrap {\n                position: relative;\n                display: inline-flex;\n                gap: 0.3em;\n                align-items: end;\n            }\n            .side {\n                height: 1.2em;\n            }\n            .mid {\n                position: relative;\n                padding-top: 1em;\n            }\n            label {\n                cursor: pointer;\n                line-height: 1;\n                height: 100%;\n                display: flex;\n                align-items: center;\n                font-weight: 700;\n                font-size: 0.8em;\n            }\n            input {\n                position: absolute;\n                top: 0px;\n                bottom: 0px;\n                left: 0px;\n                right: 0px;\n                width: 100%;\n                height: 100%;\n                cursor: pointer;\n                opacity: 0;\n            }\n            .mid .labels {\n                display: flex;\n                justify-content: center;\n                gap: .5em;\n                position: absolute;\n                width: 100%;\n                top: 0px;\n                text-align: center;\n            }\n            .track {\n                background: var(--theme-switch-track, #88888822);\n                height: 1em;\n                border: 0.1em solid var(--theme-switch-track-border, currentColor);\n                border-radius: 0.2em;\n                padding: 0 0.1em;\n                position: relative;\n                grid-area: switch;\n                width: ${cssTrackSpanWidth * themes.length}em;\n                display: flex;\n            }\n            .track span {\n                width: ${cssTrackSpanWidth}em;\n                flex-shrink: 0;\n                bottom: 0px;\n                position: relative;\n            }\n            .knob {\n                left: 50%;\n                transform: translateX(-50%);\n                position: absolute;\n                top: 0em;\n                background: var(--theme-switch-knob, currentColor);\n                transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n                width: ${this.knobWidth}em;\n                height: 1em;\n                border-radius: 0.1em;\n            }\n            ${cssKnobs}\n            ${cssLabelHighlight}\n        </style>\n        `;\n\n\t\tconst html = `\n        <div class=\"wrap\" data-active=${this.active}>\n            <div class=\"side\">\n                ${labels[0]}\n            </div>\n            <div class=\"mid\">\n                <div class=\"labels\">${midLabels.join(\"\")}</div>\n                <div class=\"track\" part=\"track\">\n                    ${radios.join(\"\")}\n                    <div class=\"knob\" part=\"knob\"></div>\n                </div>\n            </div>\n            <div class=\"side\">\n                ${labels[this.themes.length - 1]}\n            </div>\n        </div>\n        `;\n\n\t\tthis.shadow.innerHTML = `${css}${html}`;\n\t}\n}\ncustomElements.define(\"theme-switch\", ThemeSwitch);\n"],"names":["ThemeSwitch","__publicField","attr","fallback","temp","tempArray","theme","savedTheme","active","themeAttr","event","$this","e","el","html","metaThemeColor","metaColor","name","oldValue","newValue","themes","labels","i","midLabels","_label","radios","cssLabelHighlight","_theme","cssKnobs","cssTrackSpanWidth","css"],"mappings":"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"}